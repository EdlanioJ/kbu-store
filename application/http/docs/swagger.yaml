basePath: /api/v1
definitions:
  domain.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  domain.Position:
    properties:
      lat:
        type: number
      lng:
        type: number
    type: object
  domain.Store:
    properties:
      account_id:
        type: string
      category:
        $ref: '#/definitions/domain.Category'
      created_at:
        type: string
      description:
        type: string
      external_id:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/domain.Position'
      name:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  domain.Tag:
    properties:
      count:
        type: integer
      tag:
        type: string
    type: object
  handler.CreateCategoryRequest:
    properties:
      name:
        type: string
    type: object
  handler.CreateStoreRequest:
    properties:
      category_id:
        type: string
      description:
        type: string
      external_id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  handler.ErrorResponse:
    properties:
      msg:
        type: string
    type: object
  handler.UpdateStoreRequest:
    properties:
      category_id:
        type: string
      description:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
info:
  contact:
    email: edlanioj@gmail.com
    name: Edl√¢neo Manuel
  description: This is a sample swagger for KBU Store
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: KBU Store API
  version: 2.0.0
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories
      parameters:
      - description: List Page
        in: query
        name: page
        type: integer
      - description: List Limit
        in: query
        name: limit
        type: integer
      - description: List Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create category
      parameters:
      - description: Create category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new Category
      tags:
      - categories
  /categories/{id}:
    get:
      consumes:
      - application/json
      description: Get all categories by status
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get categories by id
      tags:
      - categories
  /categories/{id}/activate:
    patch:
      consumes:
      - application/json
      description: Activate one category
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Activate categories
      tags:
      - categories
  /categories/{id}/disable:
    patch:
      consumes:
      - application/json
      description: Disable one category
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Disable categories
      tags:
      - categories
  /categories/{id}/status/{status}:
    get:
      consumes:
      - application/json
      description: Get all categories by status
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      - description: Status
        enum:
        - active
        - pending
        - block
        - disable
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all categories by status
      tags:
      - categories
  /categories/status/{status}:
    get:
      consumes:
      - application/json
      description: Get all categories by status
      parameters:
      - description: Status
        enum:
        - active
        - pending
        - block
        - disable
        in: path
        name: status
        required: true
        type: string
      - description: List Page
        in: query
        name: page
        type: integer
      - description: List Limit
        in: query
        name: limit
        type: integer
      - description: List Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all categories by status
      tags:
      - categories
  /stores:
    get:
      consumes:
      - application/json
      description: Get a list of stores
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores
      tags:
      - stores
    post:
      consumes:
      - application/json
      description: Create store
      parameters:
      - description: Create store
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.CreateStoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create  a new store
      tags:
      - stores
  /stores/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one stores
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete stores
      tags:
      - stores
    get:
      consumes:
      - application/json
      description: Get one stores by id
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Store'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get stores by id
      tags:
      - stores
  /stores/{id}/activate:
    patch:
      consumes:
      - application/json
      description: Activate one stores
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Activate stores
      tags:
      - stores
  /stores/{id}/block:
    patch:
      consumes:
      - application/json
      description: Block one stores
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Block stores
      tags:
      - stores
  /stores/{id}/disable:
    patch:
      consumes:
      - application/json
      description: Disable one stores
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Disable stores
      tags:
      - stores
  /stores/{id}/owner/{owner}:
    get:
      consumes:
      - application/json
      description: Get one stores by id and owner
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      - description: user ID
        in: path
        name: owner
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Store'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get stores by id and owner
      tags:
      - stores
  /stores/active/{id}:
    patch:
      consumes:
      - application/json
      description: Activate one stores
      parameters:
      - description: store ID
        in: path
        name: id
        required: true
        type: string
      - description: Create store
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateStoreRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Activate stores
      tags:
      - stores
  /stores/category/{category}:
    get:
      consumes:
      - application/json
      description: Get a list of stores by category
      parameters:
      - description: category ID
        in: path
        name: category
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores by category
      tags:
      - stores
  /stores/location/{location}/status/{status}:
    get:
      consumes:
      - application/json
      description: Get a list of stores location and status
      parameters:
      - description: '@lat,lng'
        in: path
        name: location
        required: true
        type: string
      - description: Status
        enum:
        - active
        - pending
        - block
        - disable
        in: path
        name: status
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores location and status
      tags:
      - stores
  /stores/owner/{owner}:
    get:
      consumes:
      - application/json
      description: Get a list of stores owner
      parameters:
      - description: user ID
        in: path
        name: owner
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores by owner
      tags:
      - stores
  /stores/status/{status}:
    get:
      consumes:
      - application/json
      description: Get a list of stores by status
      parameters:
      - description: Status
        enum:
        - active
        - pending
        - block
        - disable
        in: path
        name: status
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores by status
      tags:
      - stores
  /stores/tags/:
    get:
      consumes:
      - application/json
      description: Get a list of stores
      parameters:
      - description: Tags
        in: query
        items:
          type: string
        name: tags
        required: true
        type: array
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: created_at DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all stores
      tags:
      - stores
  /tags:
    get:
      consumes:
      - application/json
      description: Get all tags
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: count DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all tags
      tags:
      - tags
  /tags/category/{category}:
    get:
      consumes:
      - application/json
      description: Get all tags by category
      parameters:
      - description: category ID
        in: path
        name: category
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: count DESC
        description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tag'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all tags by category
      tags:
      - tags
swagger: "2.0"
